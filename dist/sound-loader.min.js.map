{"version":3,"sources":["sound-loader.min.js"],"names":["Array","prototype","find","predicate","this","TypeError","value","list","Object","length","thisArg","arguments","i","call","global","soundLoader","groups","caches","initialized","VALIDATE_PATH_REG","source","id","data","group","groupId","label","success","error","fileLength","complete","replace","c","r","Math","random","v","toString","Promise","resolve","reject","cache","altId","request","path","manifest","isArray","isUndefined","forEach","obj","isString","src","getFileName","isNumber","isObject","order","push","keys","key","createjs","Sound","registerSounds","result","sort","a","b","map","on","loadSuccess","loadError","event","sprites","audioSprite","p","concat","matched","match"],"mappings":"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","file":"sound-loader.min.js","sourcesContent":["/*\r\n * SoundLoader.js 0.1.1\r\n * \r\n * Promise音楽ファイルローダー\r\n * \r\n * SoundLoader.jsはSoundJSライブラリで音楽ファイルのプリロードを行うとき、読み込んだ結果をPromiseオブジェクトを使用して処理できるようにしたライブラリです。\r\n * CreateJSのSoundJSライブラリを必要とします。また、PromiseやES5の機能が使えない環境ではポリフィルを導入する必要があります。\r\n *\r\n * -- 使い方 --\r\n * 音楽ファイルをひとつだけ登録する場合、SoundJSライブラリのregisterSound()メソッドに指定するものと同様、soundLoader()メソッドの第1引数に音楽ファイルの\r\n * パス（文字列）を指定します（必須）。必要であれば第2引数にID名を、第3引数にdataプロパティを指定できますがこれらは省略が可能です。ID名を省略した場合、その\r\n * 音楽ファイルの拡張子を除いたファイル名に自動的にIDが割り振られるので注意が必要です（音楽を鳴らすときIDが必要になる）。\r\n *\r\n * var promise = soundLoader('sound-1.mp3', 'main-bgm');\r\n *\r\n * また、これらの情報をオブジェクトに格納した形でメソッドに渡すこともできます。第1引数にオブジェクトまたは配列を指定した場合、第2引数にファイルまでのパス\r\n * （\"sounds/\"など）が指定可能です。その他、第3引数にロード完了時のデータに紐付けるためのデータ（ラベル）を指定できます。\r\n * var promise = $.soundLoader({ src: 'sound-1.mp3', id: 'main-bgm' });\r\n *\r\n * 複数の音楽ファイルを一度に渡したいときは、上記のオブジェクトを要素とした配列を指定します。SoundJSでは複数指定の場合、registerSounds()メソッドを使用します\r\n * が、SoundLoader.jsは同じsoundLoader()メソッドに指定します。\r\n * var soundFiles = [\r\n *     { src: 'sound-1.mp3', id: 'main-bgm' },\r\n *     { src: 'sound-2.mp3', id: 'sub-bgm' },\r\n *     { src: 'sound-3.mp3', id: 'gameover-bgm' }\r\n * ];\r\n *\r\n * var promise = soundLoader(soundFiles);\r\n *\r\n * さらにSoundJSと同様にオーディオスプライトなどの高度なデータの指定が可能です。\r\n * var soundFiles = [\r\n *     {\r\n *         src: \"sound-1.mp3\",\r\n *         data: {\r\n *             audioSprite: [\r\n *                 {id: \"audio-sprite1\", startTime: 0, duration: 1000},\r\n *                 {id: \"audio-sprite2\", startTime: 1500, duration: 1000}\r\n *             ]\r\n *         }\r\n *     },\r\n *     {id \"sound-2\", src: \"/audio/bgm/sound-3.mp3\", data: 5}\r\n * ];\r\n * \r\n * 返り値はPromiseオブジェクトになるので、これをthen()メソッドにつないでファイルのロード終了後の処理を記述します。\r\n * \r\n * var promise = soundLoader(soundFiles, 'sounds/');\r\n *\r\n * 読み込んだ音楽ファイルのうちひとつでも読み込みに成功した場合、成功時のコールバックが呼び出されます。結果は第1引数にオブジェクトとして渡され、読み込みに成功\r\n * した音楽ファイルのリストがそのsuccessプロパティに、失敗したファイルのリストがerrorプロパティに格納されます。soundLoader()呼び出し時にラベルを指定した\r\n * 場合、labelプロパティから紐付けたデータを参照できます。\r\n * 失敗時のコールバックが呼び出されるのは、すべての音楽ファイルが読み込みに失敗したときだけです。この場合も第1引数に同様のオブジェクトが渡されますが、error\r\n * プロパティのみアクセスできます。\r\n * \r\n * promise.then(function (result) {\r\n *     if (typeof result.success !== 'undefined') {\r\n *         doSomething(result.success);\r\n *     }\r\n * });\r\n * \r\n * 音楽データはハッシュ形式で次のようなプロパティを持ちます。IDプロパティはcreatejs.Sound.play()メソッドなどを利用するときに必要になり、読み込みに失敗したデータについては、失敗した理由がerrorプロパティに格納されます。\r\n * { id: 'sound-1', src: 'sound-1.mp3', data: 100 }\r\n * \r\n * createjs.Sound.play('sound-1');\r\n*/\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        if (this === null) {\r\n            throw new TypeError('Array.prototype.find called on null or undefined');\r\n        }\r\n        if (typeof predicate !== 'function') {\r\n            throw new TypeError('predicate must be a function');\r\n        }\r\n        var list = Object(this);\r\n        var length = list.length >>> 0;\r\n        var thisArg = arguments[1];\r\n        var value;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\n\r\n;(function (global) {\r\n    'use strict';\r\n\r\n    var soundLoader, groups, caches, initialized, VALIDATE_PATH_REG, DEFAULT_CHANNELS;\r\n    groups = {};\r\n    caches = [];\r\n    initialized = false;\r\n    VALIDATE_PATH_REG = /(.*\\/)?([^\\/]+?)\\.(mp3|ogg|opus|mpeg|wav|m4a|mp4|aiff|wma|mid)$/;\r\n    DEFAULT_CHANNELS = 100;\r\n\r\n    soundLoader = function (source, id, data) {\r\n        var group, groupId;\r\n        group = {\r\n            id: '',\r\n            label: '',\r\n            success: [],\r\n            error: [],\r\n            fileLength: 0,\r\n            complete: null\r\n        };\r\n        groupId = createUUID();\r\n        group.id= groupId;\r\n        groups[groupId] = group;\r\n        \r\n        return new Promise(function (resolve, reject) {\r\n            var cache, altId, request, path, manifest, fileLength;\r\n\r\n            if (Array.isArray(source)) {\r\n                manifest = [];\r\n                path = !isUndefined(id) ? id : '';\r\n                group.label = !isUndefined(data) ? data : '';\r\n                \r\n                source.forEach(function (obj, i) {\r\n                    if (isString(obj.src)) {\r\n                        altId = getFileName(obj.src);\r\n\r\n                        if (altId !== '') {\r\n                            request = {src: obj.src};\r\n                            request.id = !isUndefined(obj.id) ? obj.id : altId;\r\n                            request.data = isNumber(obj.data) || isObject(obj.data) ? obj.data : DEFAULT_CHANNELS;\r\n\r\n                            cache = {\r\n                                src: request.src,\r\n                                id: request.id,\r\n                                order: i,\r\n                                groupId: groupId\r\n                            };\r\n                            caches.push(cache);\r\n                            manifest.push(request);\r\n\r\n                        } else {\r\n                            group.error.push({id: altId, src: obj.src, error: 'invalid file'});\r\n                        }\r\n                    } else {\r\n                        request = {id: obj.id, src: {}};\r\n                        request.data = isNumber(obj.data) || isObject(obj.data) ? obj.data : DEFAULT_CHANNELS;\r\n                        \r\n                        Object.keys(obj.src).forEach(function (key) {\r\n                            altId = getFileName(obj.src[key]);\r\n                            if (altId !== '') {\r\n                                request.src[key] = obj.src[key];\r\n                                \r\n                            } else {\r\n                                group.error.push({id: altId, src: obj.src[key], error: 'invalid alternate file'});\r\n                            }\r\n                        });\r\n                        \r\n                        cache = {\r\n                            src: request.src,\r\n                            id: request.id,\r\n                            order: i,\r\n                            groupId: groupId\r\n                        };\r\n                        caches.push(cache);\r\n                        manifest.push(request);\r\n                    }\r\n                });\r\n            } else {\r\n                if (isString(source)) {\r\n                    path = '';\r\n                    altId = getFileName(source);\r\n                    if (altId !== '') {\r\n                        request = {src: source};\r\n                        request.id = isString(id) ? id : altId;\r\n                        request.data = isNumber(data) || isObject(data) ? data : DEFAULT_CHANNELS;\r\n\r\n                        cache = {\r\n                            src: request.src,\r\n                            id: request.id,\r\n                            order: 0,\r\n                            groupId: groupId\r\n                        };\r\n                        caches.push(cache);\r\n                        manifest = [request];\r\n                        \r\n                    } else {\r\n                        group.error.push({id: altId, src: source, error: 'invalid file'});\r\n                    }\r\n                    \r\n                } else if (isObject(source)) {\r\n                    path = !isUndefined(id) ? id : '';\r\n                    group.label = !isUndefined(data) ? data : '';\r\n                    \r\n                    if (isString(source.src)) {\r\n                        altId = getFileName(source.src);\r\n                        if (altId !== '') {\r\n                            request = {src: source.src};\r\n                            request.id = !isUndefined(source.id) ? source.id : altId;\r\n                            request.data = isNumber(source.data) || isObject(source.data) ? source.data : DEFAULT_CHANNELS;\r\n\r\n                            cache = {\r\n                                src: request.src,\r\n                                id: request.id,\r\n                                order: 0,\r\n                                groupId: groupId\r\n                            };\r\n                            caches.push(cache);\r\n                            manifest = [request];\r\n\r\n                        } else {\r\n                            group.error.push({id: altId, src: source.src, error: 'invalid file'});\r\n                        }\r\n                    } else {\r\n                        request = {id: source.id, src: {}};\r\n                        request.data = isNumber(source.data) || isObject(source.data) ? source.data : DEFAULT_CHANNELS;\r\n                        \r\n                        Object.keys(source.src).forEach(function (key) {\r\n                            altId = getFileName(source.src[key]);\r\n                            if (altId !== '') {\r\n                                request.src[key] = source.src[key];\r\n                                \r\n                            } else {\r\n                                group.error.push({id: altId, src: source.src[key], error: 'invalid alternate file'});\r\n                            }\r\n                        });\r\n                        \r\n                        cache = {\r\n                            src: request.src,\r\n                            id: request.id,\r\n                            order: 0,\r\n                            groupId: groupId\r\n                        };\r\n                        caches.push(cache);\r\n                        manifest = [request];\r\n                    }\r\n                }\r\n            }\r\n            \r\n            group.fileLength = manifest.length;\r\n            createjs.Sound.registerSounds(manifest, path);\r\n            \r\n            group.complete = function () {\r\n                var result, index;\r\n                result = {\r\n                    label: group.label\r\n                };\r\n                \r\n                if (group.success.length > 0) {\r\n                    group.success.sort(function (a, b) {\r\n                        if (a.order < b.order) {\r\n                            return -1;\r\n                        } else if (a.order > b.order) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    \r\n                    result.success = group.success.map(function (obj) {\r\n                        return {\r\n                            id: obj.id,\r\n                            src: obj.id,\r\n                            data: obj.data\r\n                        };\r\n                    });\r\n                    \r\n                    if (group.error.length > 0) {\r\n                        result.error = group.error;\r\n                    }\r\n                    \r\n                    resolve(result);\r\n                    \r\n                } else {\r\n                    result.error = group.error;\r\n                    reject(result);\r\n                }\r\n                \r\n                groups[group.id] = null;\r\n                group = null;\r\n            };\r\n            \r\n            if (!initialized) {\r\n                initialized = true;\r\n                createjs.Sound.on('fileload', loadSuccess);\r\n                createjs.Sound.on('fileerror', loadError);\r\n            }\r\n        });\r\n    };\r\n\r\n    global.soundLoader = soundLoader;\r\n    \r\n    function createUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n    \r\n    function loadSuccess(event) {\r\n        var id, src, data, result, group, cache, sprites;\r\n        id = event.id;\r\n        src = event.src;\r\n        data = event.data;\r\n        \r\n        cache = caches.find(function (c) {\r\n            return c.id === id;\r\n        });\r\n        result = {\r\n            id: id,\r\n            src: src,\r\n            data: data,\r\n            order: cache.order\r\n        };\r\n        Object.keys(groups).forEach(function (key) {\r\n            if (cache.groupId === key) {\r\n                group = groups[key];\r\n            }\r\n        });\r\n        \r\n        group.success.push(result);\r\n        if (isObject(data) && !isUndefined(data.audioSprite)) {\r\n            sprites = data.audioSprite.map(function (p) {\r\n                return {id: p.id, src: src, order: cache.order};\r\n            });\r\n            group.success = group.success.concat(sprites);\r\n        }\r\n        \r\n        group.fileLength -= 1;\r\n        if (group.fileLength === 0) {\r\n            group.complete();\r\n        }\r\n    }\r\n\r\n    function loadError(event) {\r\n        var id, src, cache, group;\r\n        id = event.id;\r\n        src = event.src;\r\n        \r\n        cache = caches.find(function (c) {\r\n            return c.id === id;\r\n        });\r\n        \r\n        Object.keys(groups).forEach(function (key) {\r\n            if (cache.groupId === key) {\r\n                group = groups[key];\r\n            }\r\n        });\r\n        \r\n        group.error.push({id: id, src: src, error: 'load error'});\r\n        group.fileLength -= 1;\r\n        if (group.fileLength === 0) {\r\n            group.complete();\r\n        }\r\n    }\r\n\r\n    function getFileName(source) {\r\n        var result, matched;\r\n        result = '';\r\n        matched = source.match(VALIDATE_PATH_REG);\r\n        if (matched !== null) {\r\n            result =  matched[2];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function isString(value) {\r\n        return Object.prototype.toString.call(value) === '[object String]';\r\n    }\r\n    \r\n    function isNumber(value) {\r\n        return Object.prototype.toString.call(value) === '[object Number]';\r\n    }\r\n\r\n    function isObject(value) {\r\n        return typeof value === 'object' && value !== null && !Array.isArray(value);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n}(this));"]}