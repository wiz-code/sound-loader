{"version":3,"sources":["sound-loader.min.js"],"names":["Array","prototype","find","predicate","this","TypeError","value","list","Object","length","thisArg","arguments","i","call","global","soundLoader","groups","caches","initialized","VALIDATE_PATH_REG","createjs","Sound","registerPlugins","HTMLAudioPlugin","source","id","data","group","groupId","success","error","fileLength","complete","replace","c","r","Math","random","v","toString","Promise","resolve","reject","cache","altId","request","path","manifest","isArray","isUndefined","forEach","obj","isString","src","getFileName","isNumber","isObject","order","push","keys","key","registerSounds","result","sort","a","b","on","loadSuccess","loadError","event","audioSprite","map","p","Infinity","concat","matched","match"],"mappings":"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","file":"sound-loader.min.js","sourcesContent":["/*\r\n * SoundLoader.js 0.1.0\r\n * \r\n * SoundJSライブラリ使用の音楽ファイル簡易ローダー\r\n * \r\n * -- 使い方 --\r\n * (1) 音楽ファイルをひとつだけ登録する場合\r\n * soundLoader()メソッドの第1引数に音楽ファイルのパスを指定する（必須）。必要であれば第2引数にID名を、第3引数にdataプロパティを指定できるがこれらは省略が可能。ID名を省略した場合、音楽ファイルの拡張子を除いたファイル名に自動的にIDが割り振られるので注意が必要（音楽を鳴らすときIDが必要になる）。\r\n *\r\n * var deferred = soundLoader('sound-1.mp3', 'main-bgm');\r\n *\r\n * また、これらの情報をオブジェクトに格納した形でメソッドに渡すこともできる。\r\n * var deferred = $.soundLoader({ src: 'sound-1.mp3', id: 'main-bgm' });\r\n *\r\n * 複数の音楽ファイルを一度に渡したいときは、上記のオブジェクトを要素とした配列を指定する。\r\n * var soundFiles = [\r\n *     { src: 'sound-1.mp3', id: 'main-bgm' },\r\n *     { src: 'sound-2.mp3', id: 'sub-bgm' },\r\n *     { src: 'sound-3.mp3', id: 'gameover-bgm' }\r\n * ];\r\n *\r\n * var deferred = soundLoader(soundFiles);\r\n *\r\n * さらにSoundJSに準じたオーディオスプライトなどの高度なデータの指定ができる。\r\n * var soundFiles = [\r\n *     {\r\n *         src: \"sound-1.mp3\",\r\n *         data: {\r\n *             audioSprite: [\r\n *                 {id: \"audio-sprite1\", startTime: 0, duration: 1000},\r\n *                 {id: \"audio-sprite2\", startTime: 1500, duration: 1000}\r\n *             ]\r\n *         }\r\n *     },\r\n *     {id \"sound-2\", src: \"/audio/bgm/sound-3.mp3\", data: 5}\r\n * ];\r\n * \r\n * 返り値はPromiseオブジェクトとなる。これを変数に格納しておき、done()やthen()メソッドにつないでファイルのロード終了後の処理を記述する。\r\n * なお、メソッドの第2引数にファイルまでのパスを指定できる。\r\n * \r\n * var deferred = soundLoader(soundFiles, basePath);\r\n *\r\n * ひとつでも読み込みに成功した音楽ファイルがあれば、成功時のコールバックが呼び出される。結果は第1引数にオブジェクトとして渡され、読み込みに成功した音楽ファイルのリストがそのsuccessプロパティに、失敗したファイルのリストがerrorプロパティに格納される。\r\n * すべての音楽ファイルが読み込みに失敗したときだけ、失敗時のコールバックが呼び出される。この場合、第1引数に同様のオブジェクトが渡される。\r\n * \r\n * deferred.done(function (result) {\r\n *     if (typeof result.success !== 'undefined') {\r\n *         doSomething(result.success);\r\n *     }\r\n * });\r\n * \r\n * 音楽データはハッシュ形式で次のようなプロパティを持つ。IDプロパティはcreatejs.Sound.play()メソッドなどを利用するときに必要になる。読み込みに失敗したデータについては、失敗した理由がerrorプロパティに格納される。\r\n * { id: 'sound-1', src: 'sound-1.mp3' }\r\n * \r\n * createjs.Sound.play('sound-1');\r\n*/\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        if (this === null) {\r\n            throw new TypeError('Array.prototype.find called on null or undefined');\r\n        }\r\n        if (typeof predicate !== 'function') {\r\n            throw new TypeError('predicate must be a function');\r\n        }\r\n        var list = Object(this);\r\n        var length = list.length >>> 0;\r\n        var thisArg = arguments[1];\r\n        var value;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\n\r\n;(function (global) {\r\n    'use strict';\r\n\r\n    var soundLoader, groups, caches, initialized, VALIDATE_PATH_REG, DEFAULT_CHANNELS;\r\n    groups = {};\r\n    caches = [];\r\n    initialized = false;\r\n    VALIDATE_PATH_REG = /(.*\\/)?([^\\/]+?)\\.(mp3|ogg|opus|mpeg|wav|m4a|mp4|aiff|wma|mid)$/;\r\n    DEFAULT_CHANNELS = 100;\r\n\r\n    createjs.Sound.registerPlugins([createjs.HTMLAudioPlugin]);\r\n\r\n    soundLoader = function (source, id, data) {\r\n        var group, groupId;\r\n        group = {\r\n            id: '',\r\n            success: [],\r\n            error: [],\r\n            fileLength: 0,\r\n            complete: null\r\n        };\r\n        groupId = createUUID();\r\n        group.id= groupId;\r\n        groups[groupId] = group;\r\n        \r\n        return new Promise(function (resolve, reject) {\r\n            var cache, altId, request, path, manifest, fileLength;\r\n\r\n            if (Array.isArray(source)) {\r\n                manifest = [];\r\n                path = !isUndefined(id) ? id : '';\r\n                \r\n                source.forEach(function (obj, i) {\r\n                    if (isString(obj.src)) {\r\n                        altId = getFileName(obj.src);\r\n\r\n                        if (altId !== '') {\r\n                            request = {src: obj.src};\r\n                            request.id = !isUndefined(obj.id) ? obj.id : altId;\r\n                            request.data = isNumber(obj.data) || isObject(obj.data) ? obj.data : DEFAULT_CHANNELS;\r\n\r\n                            cache = {\r\n                                src: request.src,\r\n                                id: request.id,\r\n                                order: i,\r\n                                groupId: groupId\r\n                            };\r\n                            caches.push(cache);\r\n                            manifest.push(request);\r\n\r\n                        } else {\r\n                            group.error.push({id: altId, src: obj.src, error: 'invalid file'});\r\n                        }\r\n                    } else {\r\n                        request = {id: obj.id, src: {}};\r\n                        request.data = isNumber(obj.data) || isObject(obj.data) ? obj.data : DEFAULT_CHANNELS;\r\n                        \r\n                        Object.keys(obj.src).forEach(function (key) {\r\n                            altId = getFileName(obj.src[key]);\r\n                            if (altId !== '') {\r\n                                request.src[key] = obj.src[key];\r\n                                \r\n                            } else {\r\n                                group.error.push({id: altId, src: obj.src[key], error: 'invalid alternate file'});\r\n                            }\r\n                        });\r\n                        \r\n                        cache = {\r\n                            src: request.src,\r\n                            id: request.id,\r\n                            order: i,\r\n                            groupId: groupId\r\n                        };\r\n                        caches.push(cache);\r\n                        manifest.push(request);\r\n                    }\r\n                });\r\n            } else {\r\n                if (isString(source)) {\r\n                    path = '';\r\n                    altId = getFileName(source);\r\n                    if (altId !== '') {\r\n                        request = {src: source};\r\n                        request.id = isString(id) ? id : altId;\r\n                        request.data = isNumber(data) || isObject(data) ? data : DEFAULT_CHANNELS;\r\n\r\n                        cache = {\r\n                            src: request.src,\r\n                            id: request.id,\r\n                            order: 0,\r\n                            groupId: groupId\r\n                        };\r\n                        caches.push(cache);\r\n                        manifest = [request];\r\n                        \r\n                    } else {\r\n                        group.error.push({id: altId, src: source, error: 'invalid file'});\r\n                    }\r\n                    \r\n                } else if (isObject(source)) {\r\n                    path = !isUndefined(id) ? id : '';\r\n                    if (isString(source.src)) {\r\n                        altId = getFileName(source.src);\r\n                        if (altId !== '') {\r\n                            request = {src: source.src};\r\n                            request.id = !isUndefined(source.id) ? source.id : altId;\r\n                            request.data = isNumber(source.data) || isObject(source.data) ? source.data : DEFAULT_CHANNELS;\r\n\r\n                            cache = {\r\n                                src: request.src,\r\n                                id: request.id,\r\n                                order: 0,\r\n                                groupId: groupId\r\n                            };\r\n                            caches.push(cache);\r\n                            manifest = [request];\r\n\r\n                        } else {\r\n                            group.error.push({id: altId, src: source.src, error: 'invalid file'});\r\n                        }\r\n                    } else {\r\n                        request = {id: source.id, src: {}};\r\n                        request.data = isNumber(source.data) || isObject(source.data) ? source.data : DEFAULT_CHANNELS;\r\n                        \r\n                        Object.keys(source.src).forEach(function (key) {\r\n                            altId = getFileName(source.src[key]);\r\n                            if (altId !== '') {\r\n                                request.src[key] = source.src[key];\r\n                                \r\n                            } else {\r\n                                group.error.push({id: altId, src: source.src[key], error: 'invalid alternate file'});\r\n                            }\r\n                        });\r\n                        \r\n                        cache = {\r\n                            src: request.src,\r\n                            id: request.id,\r\n                            order: 0,\r\n                            groupId: groupId\r\n                        };\r\n                        caches.push(cache);\r\n                        manifest = [request];\r\n                    }\r\n                }\r\n            }\r\n            \r\n            group.fileLength = manifest.length;\r\n            createjs.Sound.registerSounds(manifest, path);\r\n            \r\n            group.complete = function () {\r\n                var result, index;\r\n                result = {};\r\n                \r\n                if (group.success.length > 0) {\r\n                    group.success.sort(function (a, b) {\r\n                        if (a.order < b.order) {\r\n                            return -1;\r\n                        } else if (a.order > b.order) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    result.success = group.success;\r\n                    \r\n                    if (group.error.length > 0) {\r\n                        result.error = group.error;\r\n                    }\r\n                    resolve(result);\r\n                    \r\n                } else {\r\n                    result.error = group.error;\r\n                    reject(result);\r\n                }\r\n                \r\n                groups[group.id] = null;\r\n                group = null;\r\n            };\r\n            \r\n            if (!initialized) {\r\n                initialized = true;\r\n                createjs.Sound.on('fileload', loadSuccess);\r\n                createjs.Sound.on('fileerror', loadError);\r\n            }\r\n        });\r\n    };\r\n\r\n    global.soundLoader = soundLoader;\r\n    \r\n    function createUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n    \r\n    function loadSuccess(event) {\r\n        var id, src, group, cache, data;\r\n        id = event.id;\r\n        src = event.src;\r\n        cache = caches.find(function (c) {\r\n            return c.id === id;\r\n        });\r\n        cache.src = src;\r\n        \r\n        Object.keys(groups).forEach(function (key) {\r\n            if (cache.groupId === key) {\r\n                group = groups[key];\r\n            }\r\n        });\r\n        \r\n        group.fileLength -= 1;\r\n\r\n        if (isObject(event.data) && !isUndefined(event.data.audioSprite)) {\r\n            data = event.data.audioSprite.map(function (p) {\r\n                return {id: p.id, src: src, order: Infinity};\r\n            });\r\n            group.success = group.success.concat(data);\r\n        }\r\n\r\n        group.success.push(cache);\r\n            if (group.fileLength === 0) {\r\n            group.complete();\r\n        }\r\n    }\r\n\r\n    function loadError(event) {\r\n        var id, src, cache, group;\r\n        id = event.id;\r\n        src = event.src;\r\n        \r\n        cache = caches.find(function (c) {\r\n            return c.id === id;\r\n        });\r\n        \r\n        Object.keys(groups).forEach(function (key) {\r\n            if (cache.groupId === key) {\r\n                group = groups[key];\r\n            }\r\n        });\r\n        \r\n        group.error.push({id: id, src: src, error: 'load error'});\r\n        group.fileLength -= 1;\r\n        if (group.fileLength === 0) {\r\n            group.complete();\r\n        }\r\n    }\r\n\r\n    function getFileName(source) {\r\n        var result, matched;\r\n        result = '';\r\n        matched = source.match(VALIDATE_PATH_REG);\r\n        if (matched !== null) {\r\n            result =  matched[2];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function isString(value) {\r\n        return Object.prototype.toString.call(value) === '[object String]';\r\n    }\r\n    \r\n    function isNumber(value) {\r\n        return Object.prototype.toString.call(value) === '[object Number]';\r\n    }\r\n\r\n    function isObject(value) {\r\n        return typeof value === 'object' && value !== null && !Array.isArray(value);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n}(this));"]}