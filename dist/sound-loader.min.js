!function(r){"use strict";var e,c,t,i,s;c={},t=[],i=!1,s=/(.*\/)?([^\/]+?)\.(mp3|ogg|opus|mpeg|wav|m4a|mp4|aiff|wma|mid)$/,createjs.Sound.registerPlugins([createjs.HTMLAudioPlugin]),e=function(r,e,s){var p,x;return p={id:"",success:[],error:[],fileLength:0,complete:null},x="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){var e=16*Math.random()|0,c="x"==r?e:3&e|8;return c.toString(16)}),p.id=x,c[x]=p,new Promise(function(h,g){var m,v,j,y,S;Array.isArray(r)?(S=[],y=f(e)?"":e,r.forEach(function(r,e){a(r.src)?""!==(v=n(r.src))?((j={src:r.src}).id=f(r.id)?v:r.id,j.data=u(r.data)||l(r.data)?r.data:100,m={src:j.src,id:j.id,order:e,groupId:x},t.push(m),S.push(j)):p.error.push({id:v,src:r.src,error:"invalid file"}):((j={id:r.id,src:{}}).data=u(r.data)||l(r.data)?r.data:100,Object.keys(r.src).forEach(function(e){""!==(v=n(r.src[e]))?j.src[e]=r.src[e]:p.error.push({id:v,src:r.src[e],error:"invalid alternate file"})}),m={src:j.src,id:j.id,order:e,groupId:x},t.push(m),S.push(j))})):a(r)?(y="",""!==(v=n(r))?((j={src:r}).id=a(e)?e:v,j.data=u(s)||l(s)?s:100,m={src:j.src,id:j.id,order:0,groupId:x},t.push(m),S=[j]):p.error.push({id:v,src:r,error:"invalid file"})):l(r)&&(y=f(e)?"":e,a(r.src)?""!==(v=n(r.src))?((j={src:r.src}).id=f(r.id)?v:r.id,j.data=u(r.data)||l(r.data)?r.data:100,m={src:j.src,id:j.id,order:0,groupId:x},t.push(m),S=[j]):p.error.push({id:v,src:r.src,error:"invalid file"}):((j={id:r.id,src:{}}).data=u(r.data)||l(r.data)?r.data:100,Object.keys(r.src).forEach(function(e){""!==(v=n(r.src[e]))?j.src[e]=r.src[e]:p.error.push({id:v,src:r.src[e],error:"invalid alternate file"})}),m={src:j.src,id:j.id,order:0,groupId:x},t.push(m),S=[j])),p.fileLength=S.length,createjs.Sound.registerSounds(S,y),p.complete=function(){var r;r={},p.success.length>0?(p.success.sort(function(r,e){return r.order<e.order?-1:r.order>e.order?1:0}),r.success=p.success,p.error.length>0&&(r.error=p.error),h(r)):(r.error=p.error,g(r)),c[p.id]=null,p=null},i||(i=!0,createjs.Sound.on("fileload",o),createjs.Sound.on("fileerror",d))})},r.soundLoader=e;function o(r){var e,i,s,o,d;e=r.id,i=r.src,(o=t.find(function(r){return r.id===e})).src=i,Object.keys(c).forEach(function(r){o.groupId===r&&(s=c[r])}),s.fileLength-=1,l(r.data)&&!f(r.data.audioSprite)&&(d=r.data.audioSprite.map(function(r){return{id:r.id,src:i,order:1/0}}),s.success=s.success.concat(d)),s.success.push(o),0===s.fileLength&&s.complete()}function d(r){var e,i,s,o;e=r.id,i=r.src,s=t.find(function(r){return r.id===e}),Object.keys(c).forEach(function(r){s.groupId===r&&(o=c[r])}),o.error.push({id:e,src:i,error:"load error"}),o.fileLength-=1,0===o.fileLength&&o.complete()}function n(r){var e,c;return e="",null!==(c=r.match(s))&&(e=c[2]),e}function a(r){return"[object String]"===Object.prototype.toString.call(r)}function u(r){return"[object Number]"===Object.prototype.toString.call(r)}function l(r){return"object"==typeof r&&null!==r&&!Array.isArray(r)}function f(r){return void 0===r}}(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
